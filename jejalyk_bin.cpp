#include <iostream>

#include "compiler/supercompiler/compiler.h"
#include "parser.h"

int main() {
  const auto code = R"(
макет структура Дія
  назва текст
  параметри список
  вертає список
кінець

макет структура Структура
  назва текст
  'предок Структура
  параметри список
кінець

макет структура Модуль
  назва текст
кінець

макет структура перебір
  завершено логічне
  далі() обʼєкт
кінець

макет структура логічне
  чародія_створити(значення обʼєкт) логічне
  чародія_логічне() логічне
  чародія_число() число
  чародія_текст() текст
кінець

макет субʼєкт так логічне
макет субʼєкт ні логічне

макет структура число
  чародія_створити(значення число) число
  чародія_додати(значення число) число
  чародія_відняти(значення число) число
  чародія_помножити(значення число) число
  чародія_поділити(значення число) число
  чародія_логічне() логічне
  чародія_число() число
  чародія_текст() текст
кінець

макет структура текст
  довжина число

  чародія_створити(значення текст) текст
  чародія_додати(значення текст) текст
  чародія_логічне() логічне
  чародія_число() число
  чародія_текст() текст
  чародія_перебір() перебір
кінець

макет структура список<Т>
  довжина число

  чародія_покласти(позиція число, значення Т) Т
  чародія_отримати(позиція число) Т
  чародія_логічне() логічне
  чародія_число() число
  чародія_текст() текст
  чародія_перебір() перебір
кінець

макет структура словник<К, Т>
  ключі() перебір<число, К>
  значення() перебір<число, Т>
  чародія_отримати(ключ К) Т
  чародія_перебір() перебір<К, Т>

  її розмір(значення словник) число
кінець

макет структура А<Т>
  б Т
кінець

макет дія друк(...значення список)

;; ---

а = А<текст>(2)
)";
  const auto parser_result = mavka::parser::parse(code);
  if (parser_result->error) {
    std::cout << parser_result->error->message << std::endl;
    return 1;
  }
  const auto result = supercompiler::compile(parser_result->program_node);
  if (result->error) {
    if (result->error->full) {
      std::cout << result->error->line << ":" << result->error->column << ": ";
    }
    std::cout << result->error->message << std::endl;
    return 1;
  }
  std::cout << "compilation successful" << std::endl;
  return 0;
}