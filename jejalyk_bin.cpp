#include <iostream>

#include "compiler/typeinterpreter/typeinterpreter.h"
#include "parser.h"

int main() {
  const auto code = R"(
макет структура Дія
  назва текст
кінець

макет структура Модуль
  назва текст
кінець

макет структура очікування<Т>
кінець

макет структура перебір<З>
  завершено логічне
  значення З
  далі()
кінець

макет структура перебір_з_ключем<К, З>
  завершено логічне
  ключ К
  значення З
  далі()
кінець

макет структура логічне
  чародія_логічне() логічне
  чародія_число() число
  чародія_текст() текст
кінець

макет субʼєкт так логічне
макет субʼєкт ні логічне

макет структура число
  чародія_додати(значення число) число
  чародія_відняти(значення число) число
  чародія_помножити(значення число) число
  чародія_поділити(значення число) число
  чародія_бні() число
  чародія_додатнє() число
  чародія_відʼємне() число
  чародія_більше(значення число) логічне
  чародія_менше(значення число) логічне
  чародія_не_більше(значення число) логічне
  чародія_не_менше(значення число) логічне
  чародія_зменшити_після() число
  чародія_збільшити_після() число
  чародія_логічне() логічне
  чародія_число() число
  чародія_текст() текст
кінець

макет структура текст
  довжина число

  чародія_додати(значення текст) текст
  чародія_логічне() логічне
  чародія_число() число
  чародія_текст() текст
  чародія_перебір() перебір<текст>
  чародія_перебір_з_ключем() перебір_з_ключем<число, текст>
кінець

макет структура список<Т>
  довжина число

  додати(значення Т) список<Т>
  отримати(позиція число) Т або пусто
  очистити() список<Т>

  чародія_отримати(позиція число) Т
  чародія_покласти(позиція число, значення Т) Т
  чародія_логічне() логічне
  чародія_число() число
  чародія_текст() текст
  чародія_перебір() перебір<Т>
  чародія_перебір_з_ключем() перебір_з_ключем<число, Т>
  чародія_додатнє()
кінець

макет структура словник<К, З>
  розмір число

  отримати(ключ К) З або пусто
  ключі() перебір<К>
  значення() перебір<З>
  очистити() словник<К, З>

  чародія_отримати(ключ К) З
  чародія_покласти(ключ К, значення З) З
  чародія_перебір() перебір<К>
  чародія_перебір_з_ключем() перебір_з_ключем<К, З>
кінець

а = []

тривала дія привіт() обʼєкт
кінець

якщо 2 + 2 і 4
  1 + 1
інакше якщо ні
  2 + 2
інакше якщо так
  2 + 2
кінець
)";
  const auto parser_result = mavka::parser::parse(code);
  if (parser_result->error) {
    std::cout << parser_result->error->message << std::endl;
    return 1;
  }
  const auto result = typeinterpreter::compile(parser_result->program_node);
  if (result->error) {
    if (result->error->full) {
      std::cout << result->error->line << ":" << result->error->column << ": ";
    }
    std::cout << result->error->message << std::endl;
    return 1;
  }
  std::cout << "compilation successful" << std::endl;
  std::cout << jejalyk::js::stringify_body(result->js_body) << std::endl;
  return 0;
}