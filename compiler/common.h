#pragma once

#include <string>

namespace jejalyk {
    const std::string MAVKA_CALL = "мВикл"; // мВикл(значення, аргументи)
    const std::string MAVKA_GET = "мОтрм"; // мОтрм(значення, властивість)
    const std::string MAVKA_SET = "мВстн"; // мВстн(значення, властивість, значення)
    const std::string MAVKA_SET_ELEMENT = "мПклс"; // мПклс(значення, елемент, значення)
    const std::string MAVKA_GET_ELEMENT = "мОтре"; // мОтрм(значення, елемент)
    const std::string MAVKA_DIIA = "мДія"; // мДія(назва, параметри, функція)
    const std::string MAVKA_METHOD = "мМетд"; // мМетд(назва, параметри, функція)
    const std::string MAVKA_SET_METHOD = "мВМтд"; // мВМтд(структура, метод)
    const std::string MAVKA_PARAM = "мПарм"; // мПарм(назва, тип, значення)
    const std::string MAVKA_VPARAM = "мВпрм"; // мВпрм(назва, тип, значення)
    const std::string MAVKA_ADD = "мДодт"; // мДодт(а, б)
    const std::string MAVKA_SUB = "мВідн"; // мВідн(а, б)
    const std::string MAVKA_MUL = "мМнож"; // мМнож(а, б)
    const std::string MAVKA_DIV = "мДілт"; // мДілт(а, б)
    const std::string MAVKA_MOD = "мОстч"; // мОстч(а, б)
    const std::string MAVKA_DIV_DIV = "мОст2"; // мОст2(а, б)
    const std::string MAVKA_POW = "мСтпн"; // мСтпн(а, б)
    const std::string MAVKA_NOT = "мНі"; // мНі(а)
    const std::string MAVKA_BIT_AND = "мДвІ"; // мДвІ(а, б)
    const std::string MAVKA_BIT_OR = "мДАбо"; // мДАбо(а, б)
    const std::string MAVKA_BIT_XOR = "мДваб"; // мДваб(а, б)
    const std::string MAVKA_BIT_NOT = "мДні"; // мДні(а)
    const std::string MAVKA_BIT_LSHIFT = "мЗвлв"; // мЗвлв(а, б)
    const std::string MAVKA_BIT_RSHIFT = "мЗвпр"; // мЗвпр(а, б)
    const std::string MAVKA_AS = "мЯк"; // мЯк(а, б)
    const std::string MAVKA_EQ = "мРівн"; // мРівн(а, б)
    const std::string MAVKA_LT = "мМенш"; // мМенш(а, б)
    const std::string MAVKA_LE = "мМері"; // мМері(а, б)
    const std::string MAVKA_GT = "мБілш"; // мБілш(а, б)
    const std::string MAVKA_GE = "мБірі"; // мБірі(а, б)
    const std::string MAVKA_MODULE = "мМодл"; // мМодл(назва, функція)
    const std::string MAVKA_NEGATIVE = "мНегт"; // мНегт(значення)
    const std::string MAVKA_POSITIVE = "мПозт"; // мПозт(значення)
    const std::string MAVKA_POST_DECREMENT = "мПдек"; // мПдек(значення)
    const std::string MAVKA_POST_INCREMENT = "мПінк"; // мПінк(значення)
    const std::string MAVKA_PRE_DECREMENT = "мПрдк"; // мПрдк(значення)
    const std::string MAVKA_PRE_INCREMENT = "мПрік"; // мПрік(значення)
    const std::string MAVKA_GIVE = "мДати"; // мДати(модуль, назва, значення)
    const std::string MAVKA_STRUCTURE = "мСтрк"; // мСтрк(назва, параметри, предок)
    const std::string MAVKA_IS = "мЄ"; // мЄ(а, б)
    const std::string MAVKA_CONTAINS = "мМає"; // мМає(а, б)
    const std::string MAVKA_FROM_TO = "мЦВід"; // мЦВід(від, до, символ, функція)
    const std::string MAVKA_FROM_TO_FN = "мЦВідФ"; // мЦВідФ(оператор, крок)
    const std::string MAVKA_VALUES_ITERATOR = "мІтер"; // мІтер(значення)
    const std::string MAVKA_ENTRIES_ITERATOR = "мІтерП"; // мІтерП(значення)
    const std::string MAVKA_PARENT = "мСпрд"; // мСпрд(я)

    std::string varname(const std::string& name);
}
